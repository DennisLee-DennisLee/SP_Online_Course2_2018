1. The code as written has no way to return False for numbers that aren't a power of 2, so a number such as (in the example I used below) 17 will keep returning smaller and smaller floats because there's no way to reach the True condition of 2. As you can see in the log below, it eventually gets to be less than 2.

2. My terminal debugging activity log below:

$ python -m pdb debugging.py 17
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(1)<module>()
-> import sys
(Pdb) ll
  1  -> import sys
  2
  3
  4     def my_fun(n):
  5         if n == 2:
  6             return True
  7
  8         return my_fun(n/2)
  9
 10
 11     if __name__ == '__main__':
 12         num = int(sys.argv[1])
 13         print(my_fun(num))
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(4)<module>()
-> def my_fun(n):
(Pdb) l
  1     import sys
  2
  3
  4  -> def my_fun(n):
  5         if n == 2:
  6             return True
  7
  8         return my_fun(n/2)
  9
 10
 11     if __name__ == '__main__':
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(11)<module>()
-> if __name__ == '__main__':
(Pdb) l
  6             return True
  7
  8         return my_fun(n/2)
  9
 10
 11  -> if __name__ == '__main__':
 12         num = int(sys.argv[1])
 13         print(my_fun(num))
[EOF]
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(12)<module>()
-> num = int(sys.argv[1])
(Pdb) l
  7
  8         return my_fun(n/2)
  9
 10
 11     if __name__ == '__main__':
 12  ->     num = int(sys.argv[1])
 13         print(my_fun(num))
[EOF]
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(13)<module>()
-> print(my_fun(num))
(Pdb) s
--Call--
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(4)my_fun()
-> def my_fun(n):
(Pdb) l
  1     import sys
  2
  3
  4  -> def my_fun(n):
  5         if n == 2:
  6             return True
  7
  8         return my_fun(n/2)
  9
 10
 11     if __name__ == '__main__':
(Pdb) s
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(5)my_fun()
-> if n == 2:
(Pdb) pp n
17
(Pdb) b 5
Breakpoint 1 at c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py:5
(Pdb) l
  1     import sys
  2
  3
  4     def my_fun(n):
  5 B->     if n == 2:
  6             return True
  7
  8         return my_fun(n/2)
  9
 10
 11     if __name__ == '__main__':
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
17
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(5)my_fun()
-> if n == 2:
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
8.5
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(5)my_fun()
-> if n == 2:
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
4.25
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(5)my_fun()
-> if n == 2:
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
2.125
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(5)my_fun()
-> if n == 2:
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
1.0625
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(5)my_fun()
-> if n == 2:
(Pdb) n
> c:\users\john\desktop\class\sp_online_course2_2018\students\jonathanmauk\lesson05\debugging.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
0.53125
(Pdb) quit