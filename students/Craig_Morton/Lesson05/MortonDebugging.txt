Q:
In very general terms, use a couple of sentences to address the problem with our code. For example, give your best guess or insight on the following questions:

What is wrong with our logic?
Why doesn't the function stop calling itself?
What's happening to the value of 'n' as the function gets deeper and deeper into recursion?

===================

A:
The recursive function was unable to stop and return false while reducing value below 2.
There wasn't a condition to return false in the original code.
adding an if statement returning false if n is less than 1 resolves this issue.

===================

Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ cat recursive.py
import sys

def my_fun(n):
    if n == 2:
        return True
    return my_fun(n/2)

if __name__ == '__main__':
    n = int(sys.argv[1])
    print(my_fun(n))

Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ python recursive.py 16
True

Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ python recursive.py 8
True

Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ python recursive.py 5
Traceback (most recent call last):
  File "recursive.py", line 10, in <module>
    print(my_fun(n))
  File "recursive.py", line 6, in my_fun
    return my_fun(n/2)
  File "recursive.py", line 6, in my_fun
    return my_fun(n/2)
  File "recursive.py", line 6, in my_fun
    return my_fun(n/2)
  [Previous line repeated 994 more times]
  File "recursive.py", line 4, in my_fun
    if n == 2:
RecursionError: maximum recursion depth exceeded in comparison

Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ python -m pdb recursive.py 5
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(1)<module>()
-> import sys
(Pdb) ll
  1  -> import sys
  2
  3     def my_fun(n):
  4         if n == 2:
  5             return True
  6         return my_fun(n/2)
  7
  8     if __name__ == '__main__':
  9         n = int(sys.argv[1])
 10         print(my_fun(n))
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(3)<module>()
-> def my_fun(n):
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(8)<module>()
-> if __name__ == '__main__':
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(9)<module>()
-> n = int(sys.argv[1])
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(10)<module>()
-> print(my_fun(n))
(Pdb) pp n
5
(Pdb) s
--Call--
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(4)my_fun()
-> if n == 2:
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(6)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
5
(Pdb) s
--Call--
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) pp n
2.5
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(4)my_fun()
-> if n == 2:
(Pdb) pp n
2.5
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(6)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(4)my_fun()
-> if n == 2:
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(6)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
1.25
(Pdb) s
--Call--
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(3)my_fun()
-> def my_fun(n):
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(4)my_fun()
-> if n == 2:
(Pdb) s
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(6)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
0.625
(Pdb) exit
Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ echo Included return false statement in recursive.py
Included return false statement in recursive.py
Chromatic@Chromatic MINGW64 ~/Desktop/Python_Modules/Python UW 220/Lesson05
$ python -m pdb recursive.py 5
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(1)<module>()
-> import sys
(Pdb) ll
  1  -> import sys
  2
  3
  4     def my_fun(n):
  5         if n < 2:
  6             return False
  7
  8         if n == 2:
  9             return True
 10
 11         return my_fun(n/2)
 12
 13
 14     if __name__ == '__main__':
 15         n = int(sys.argv[1])
 16         print(my_fun(n))
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(14)<module>()
-> if __name__ == '__main__':
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(15)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(16)<module>()
-> print(my_fun(n))
(Pdb) n
False
--Return--
> c:\users\cmort\desktop\python_modules\python uw 220\lesson05\recursive.py(16)<module>()->None
-> print(my_fun(n))
(Pdb) exit